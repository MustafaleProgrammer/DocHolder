{"ast":null,"code":"var _jsxFileName = \"/Users/drew/Documents/Development/reactapp/src/Main.js\";\nimport { buildQueries } from '@testing-library/react';\nimport React from 'react';\nimport styled from 'styled-components'; //Individual Button Stylings\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = {\n  RecordButton: {\n    default: '#31CACF',\n    //Light-Blue\n    hover: '#D5D5D5' //Light-Grey\n\n  },\n  ResultsButton: {\n    default: '#F26627',\n    //Orange\n    hover: '#EF3D59' //Red\n\n  }\n}; //Button Styling\n\nconst Button = styled.button`\n background-color: ${props => theme[props.theme].default};\n color: black;\n padding: 5px 15px\n border-radius: 5px;\n outline: 0;\n text-transform: uppercase;\n margin: 10px 0px;\n box-shadow: 0px 2px 2px lightgrey;\n cursor: pointer;\n transition: ease background-color 250ms;\n &:hover {\n     background-color: ${props => theme[props.theme].hover};;\n }\n`;\n_c = Button;\n\nfunction Main() {\n  var _s = $RefreshSig$();\n\n  const Search = () => {\n    _s();\n\n    const [showResults, setShowResults] = React.useState(false);\n\n    const onClick = () => setShowResults(true);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Search\",\n        onClick: onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), showResults ? /*#__PURE__*/_jsxDEV(Results, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(Search, \"E7h+lBUivbH7ADoeXtUX/fQEGbU=\");\n\n  const Results = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"results\",\n    className: \"search-results\",\n    children: [/*#__PURE__*/_jsxDEV(MyChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecordMileage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecordFuel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        theme: \"RecordButton\",\n        onClick: showResults.RecordFuel,\n        children: \"Record Fuel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        theme: \"RecordButton\",\n        onClick: clickMe,\n        children: \"Record Mileage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        theme: \"ResultsButton\",\n        onClick: clickMe,\n        children: \"View Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = Main;\nexport default Main;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Main\");","map":{"version":3,"sources":["/Users/drew/Documents/Development/reactapp/src/Main.js"],"names":["buildQueries","React","styled","theme","RecordButton","default","hover","ResultsButton","Button","button","props","Main","Search","showResults","setShowResults","useState","onClick","Results","RecordFuel","clickMe"],"mappings":";AAAA,SAASA,YAAT,QAA6B,wBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;;;AACA,MAAMC,KAAK,GAAG;AACVC,EAAAA,YAAY,EAAE;AACVC,IAAAA,OAAO,EAAE,SADC;AACU;AACpBC,IAAAA,KAAK,EAAE,SAFG,CAEU;;AAFV,GADJ;AAKVC,EAAAA,aAAa,EAAE;AACXF,IAAAA,OAAO,EAAE,SADE;AACS;AACpBC,IAAAA,KAAK,EAAE,SAFI,CAES;;AAFT;AALL,CAAd,C,CAWA;;AACA,MAAME,MAAM,GAAGN,MAAM,CAACO,MAAO;AAC7B,qBAAqBC,KAAK,IAAIP,KAAK,CAACO,KAAK,CAACP,KAAP,CAAL,CAAmBE,OAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyBK,KAAK,IAAIP,KAAK,CAACO,KAAK,CAACP,KAAP,CAAL,CAAmBG,KAAM;AAC3D;AACA,CAdA;KAAME,M;;AAgBN,SAASG,IAAT,GAAgB;AAAA;;AAEd,QAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,UAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,KAAK,CAACc,QAAN,CAAe,KAAf,CAAtC;;AACA,UAAMC,OAAO,GAAG,MAAMF,cAAc,CAAC,IAAD,CAApC;;AACA,wBACE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,OAAO,EAAEE;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,EAEIH,WAAW,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,GAAiB,IAFhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GATD;;AAFc,KAERD,MAFQ;;AAad,QAAMK,OAAO,GAAG,mBACd;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,SAAS,EAAC,gBAA5B;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,sBACE;AAAA,4BACI;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,cAAd;AAA6B,QAAA,OAAO,EAAEJ,WAAW,CAACK,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,6BACA,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,cAAd;AAA6B,QAAA,OAAO,EAAEC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YANJ,eAYI;AAAA,6BACA,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,eAAd;AAA8B,QAAA,OAAO,EAAEA,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA,kBADF;AAoBD;;MA1CQR,I;AA4CT,eAAeA,IAAf","sourcesContent":["import { buildQueries } from '@testing-library/react';\nimport React from 'react'\nimport styled from 'styled-components';\n\n//Individual Button Stylings\nconst theme = {\n    RecordButton: {\n        default: '#31CACF', //Light-Blue\n        hover: '#D5D5D5'    //Light-Grey\n    },\n    ResultsButton: {\n        default: '#F26627', //Orange\n        hover: '#EF3D59'    //Red\n    }\n}\n\n//Button Styling\nconst Button = styled.button`\n background-color: ${props => theme[props.theme].default};\n color: black;\n padding: 5px 15px\n border-radius: 5px;\n outline: 0;\n text-transform: uppercase;\n margin: 10px 0px;\n box-shadow: 0px 2px 2px lightgrey;\n cursor: pointer;\n transition: ease background-color 250ms;\n &:hover {\n     background-color: ${props => theme[props.theme].hover};;\n }\n`\n\nfunction Main() {\n\n  const Search = () => {\n    const [showResults, setShowResults] = React.useState(false)\n    const onClick = () => setShowResults(true)\n    return (\n      <div>\n        <input type=\"submit\" value=\"Search\" onClick={onClick} />\n        { showResults ? <Results /> : null }\n      </div>\n    )\n  }\n  \n  const Results = () => (\n    <div id=\"results\" className=\"search-results\">\n      <MyChart />\n      <RecordMileage />\n      <RecordFuel />\n\n    </div>\n  )\n  \n  return (\n    <>\n        <div>\n            <Button theme=\"RecordButton\" onClick={showResults.RecordFuel}>\n            Record Fuel\n            </Button>\n        </div>\n        <div>\n        <Button theme=\"RecordButton\" onClick={clickMe}>\n            Record Mileage\n\n            </Button>\n        </div>\n        <div>\n        <Button theme=\"ResultsButton\" onClick={clickMe}>\n            View Results\n            </Button>\n        </div>\n    </>\n  )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}