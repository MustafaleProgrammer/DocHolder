{"ast":null,"code":"var _jsxFileName = \"/Users/drew/Documents/Development/FuelTracker/src/App.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport MyChart from './MyChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  RecordButton: {\n    default: '#31CACF',\n    //Light-Blue\n    hover: '#D5D5D5' //Light-Grey\n\n  },\n  ResultsButton: {\n    default: '#F26627',\n    //Orange\n    hover: '#EF3D59' //Red\n\n  }\n};\nconst Button = styled.button`\n  background-color: ${props => theme[props.theme].default};\n  color: black;\n  padding: 5px 15px\n  border-radius: 5px;\n  outline: 0;\n  text-transform: uppercase;\n  margin: 10px 0px;\n  box-shadow: 0px 2px 2px lightgrey;\n  cursor: pointer;\n  transition: ease background-color 250ms;\n  &:hover {\n  background-color: ${props => theme[props.theme].hover};;\n          }`;\n_c = Button;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMe: true\n    };\n    this.openRecordFuel = this.openRecordFuel.bind(this);\n  }\n\n  openRecordFuel() {\n    this.setState({\n      showMe: !this.state.showMe\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"jumbotron\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          class: \"display-5\",\n          children: \"Fuel + Mileage Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-13 offset-0 my-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Fuel Expenditure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), this.state.showMe ? /*#__PURE__*/_jsxDEV(MyChart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 45\n            }, this) : null, \"//Individual Button Stylings\", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                theme: \"RecordButton\",\n                onClick: this.openRecordFuel,\n                children: \"Record Fuel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                theme: \"RecordButton\",\n                onClick: this.operation,\n                children: \"Record Mileage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                theme: \"ResultsButton\",\n                onClick: this.operation,\n                children: \"View Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App; // const theme = {\n//   RecordButton: {\n//       default: '#31CACF', //Light-Blue\n//       hover: '#D5D5D5'    //Light-Grey\n//   },\n//   ResultsButton: {\n//       default: '#F26627', //Orange\n//       hover: '#EF3D59'    //Red\n//   }\n// }\n// //Button Styling\n// const Button = styled.button`\n//   background-color: ${props => theme[props.theme].default};\n//   color: black;\n//   padding: 5px 15px\n//   border-radius: 5px;\n//   outline: 0;\n//   text-transform: uppercase;\n//   margin: 10px 0px;\n//   box-shadow: 0px 2px 2px lightgrey;\n//   cursor: pointer;\n//   transition: ease background-color 250ms;\n//   &:hover {\n//   background-color: ${props => theme[props.theme].hover};;\n//           }`\n//   function Main() {\n//   return (\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/drew/Documents/Development/FuelTracker/src/App.js"],"names":["React","Component","styled","MyChart","theme","RecordButton","default","hover","ResultsButton","Button","button","props","App","constructor","state","showMe","openRecordFuel","bind","setState","render","operation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,YAAY,EAAE;AACVC,IAAAA,OAAO,EAAE,SADC;AACU;AACpBC,IAAAA,KAAK,EAAE,SAFG,CAEU;;AAFV,GADF;AAKZC,EAAAA,aAAa,EAAE;AACXF,IAAAA,OAAO,EAAE,SADE;AACS;AACpBC,IAAAA,KAAK,EAAE,SAFI,CAES;;AAFT;AALH,CAAd;AAWA,MAAME,MAAM,GAAGP,MAAM,CAACQ,MAAO;AAC7B,sBAAsBC,KAAK,IAAIP,KAAK,CAACO,KAAK,CAACP,KAAP,CAAL,CAAmBE,OAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBK,KAAK,IAAIP,KAAK,CAACO,KAAK,CAACP,KAAP,CAAL,CAAmBG,KAAM;AACxD,YAbA;KAAME,M;;AAeN,MAAMG,GAAN,SAAkBX,SAAlB,CAA4B;AAC1BY,EAAAA,WAAW,CAACF,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKG,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAC;AADI,KAAb;AAIA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AAED;;AAGDD,EAAAA,cAAc,GACd;AACE,SAAKE,QAAL,CACA;AACEH,MAAAA,MAAM,EAAC,CAAC,KAAKD,KAAL,CAAWC;AADrB,KADA;AAID;;AAMDI,EAAAA,MAAM,GAAG;AACP,wBAEA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,+BACE;AAAI,UAAA,KAAK,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADJ,eAKU;AAAK,QAAA,KAAK,EAAC,sBAAX;AAAA,+BACI;AAAK,UAAA,KAAK,EAAC,MAAX;AAAA,iCACE;AAAK,YAAA,KAAK,EAAC,WAAX;AAAA,oCAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,EAII,KAAKL,KAAL,CAAWC,MAAX,gBAAoB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAApB,GAAkC,IAJtC,+CAcE;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,cAAd;AAA6B,gBAAA,OAAO,EAAE,KAAKC,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAdF,eAoBE;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,cAAd;AAA6B,gBAAA,OAAO,EAAE,KAAKI,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBApBF,eA0BE;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,eAAd;AAA8B,gBAAA,OAAO,EAAE,KAAKA,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALV;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAiDD;;AA1EyB;;AA4E5B,eAAeR,GAAf,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport MyChart from './MyChart';\n\nconst theme = {\n  RecordButton: {\n      default: '#31CACF', //Light-Blue\n      hover: '#D5D5D5'    //Light-Grey\n  },\n  ResultsButton: {\n      default: '#F26627', //Orange\n      hover: '#EF3D59'    //Red\n  }\n}\n\nconst Button = styled.button`\n  background-color: ${props => theme[props.theme].default};\n  color: black;\n  padding: 5px 15px\n  border-radius: 5px;\n  outline: 0;\n  text-transform: uppercase;\n  margin: 10px 0px;\n  box-shadow: 0px 2px 2px lightgrey;\n  cursor: pointer;\n  transition: ease background-color 250ms;\n  &:hover {\n  background-color: ${props => theme[props.theme].hover};;\n          }`\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMe:true\n    }\n\n    this.openRecordFuel = this.openRecordFuel.bind(this);\n\n  }\n\n  \n  openRecordFuel()\n  {\n    this.setState(\n    {\n      showMe:!this.state.showMe  \n    })\n  }\n\n  \n\n\n\n  render() {\n    return (\n\n    <div className=\"container\">\n        <div class=\"jumbotron\">\n          <h3 class=\"display-5\">Fuel + Mileage Tracker</h3>\n        </div>\n        \n              <div class=\"col-13 offset-0 my-5\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      \n                    <h5>Fuel Expenditure</h5>\n                      {\n                        this.state.showMe ? <MyChart /> : null\n                      }\n                      \n                  \n\n\n\n                      //Individual Button Stylings\n\n                      \n                      <div>\n                        <Button theme=\"RecordButton\" onClick={this.openRecordFuel}>\n                        Record Fuel\n                        </Button>\n                      </div>\n                                      \n                      <div>\n                        <Button theme=\"RecordButton\" onClick={this.operation}>\n                        Record Mileage\n                        </Button>\n                      </div>\n                              \n                      <div>\n                        <Button theme=\"ResultsButton\" onClick={this.operation}>\n                        View Results\n                        </Button>\n                      </div>\n                      \n                      \n\n\n              </div>\n            </div>\n          </div>\n        </div>\n    );    \n  }\n}\nexport default App;\n\n\n\n\n\n\n\n\n\n\n// const theme = {\n//   RecordButton: {\n//       default: '#31CACF', //Light-Blue\n//       hover: '#D5D5D5'    //Light-Grey\n//   },\n//   ResultsButton: {\n//       default: '#F26627', //Orange\n//       hover: '#EF3D59'    //Red\n//   }\n// }\n\n// //Button Styling\n// const Button = styled.button`\n//   background-color: ${props => theme[props.theme].default};\n//   color: black;\n//   padding: 5px 15px\n//   border-radius: 5px;\n//   outline: 0;\n//   text-transform: uppercase;\n//   margin: 10px 0px;\n//   box-shadow: 0px 2px 2px lightgrey;\n//   cursor: pointer;\n//   transition: ease background-color 250ms;\n//   &:hover {\n//   background-color: ${props => theme[props.theme].hover};;\n//           }`\n\n//   function Main() {\n  \n//   return ("]},"metadata":{},"sourceType":"module"}